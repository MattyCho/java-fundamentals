/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
    @Test void someLibraryMethodReturnsTrue() {
        Library cut = new Library();

        // test for dice roll method
        int[] diceArray = cut.roll(10);
        System.out.println("Rolling dice: " + Arrays.toString(diceArray));

        // test for duplicates method
        int[] testArray = new int[]{1,2,3,4,5,6,7,8,9,10,2};
        boolean duplicates = cut.containsDuplicate(testArray);
        System.out.println("The array contains duplicates: " + duplicates);

        //test for averages method
        double totalAverages = cut.average(testArray);
        System.out.println("Average = " + totalAverages);

        //test for array of arrays
        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        int[] lowestAvg = cut.arrayOfArrays(weeklyMonthTemperatures);
        System.out.println(Arrays.toString(lowestAvg));

        // test for analyzing weather data
        cut.analyzingWeatherData(weeklyMonthTemperatures);

        cut.BinarySearch(testArray, 10);

        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");

        String winner = cut.tally(votes);
        System.out.println(winner + " received the most votes!");
    }
}
